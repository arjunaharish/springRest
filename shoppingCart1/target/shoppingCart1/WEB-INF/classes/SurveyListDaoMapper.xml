<!-- <?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
 
<mapper namespace='com.shoppingcart.surveylistdao.mappers.SurveyListDao'>
 
  <select id='getCreateNewSurveyList' parameterType='string' resultType='com.createnewsurveyList.beans.CreateNewSurveyList'>
     select createnew from surveySearchDropDown
  </select>
  Instead of referencing Fully Qualified Class Names we can register Aliases in mybatis-config.xml and use Alias names.
   <resultMap type='CreateNewSurveyList' id='CreateNewSurveyListResult'>
    <id property='createNew' column='createNew'/>
    <result property='emailId' column='email_id'/>
    <result property='password' column='password'/>
    <result property='firstName' column='first_name'/>
    <result property='lastName' column='last_name'/>   
   </resultMap>
 
 <select id='SurveyListDao' resultMap='CreateNewSurveyListResult'>
   select createnew from surveySearchDropDown
  </select>
 
  <select id='getAllUsers' resultMap='UserResult'>
   SELECT * FROM USER
  </select>
 
  <insert id='insertUser' parameterType='User' useGeneratedKeys='true' keyProperty='userId'>
   INSERT INTO USER(email_id, password, first_name, last_name)
    VALUES(#{emailId}, #{password}, #{firstName}, #{lastName})
  </insert>
 
  <update id='updateUser' parameterType='User'>
    UPDATE USER 
    SET
     PASSWORD= #{password},
     FIRST_NAME = #{firstName},
     LAST_NAME = #{lastName}
    WHERE USER_ID = #{userId}
  </update>
 
  <delete id='deleteUser' parameterType='int'>
    DELETE FROM USER WHERE USER_ID = #{userId}
  </delete>
 
</mapper> -->